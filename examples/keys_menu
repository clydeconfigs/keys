#!/usr/bin/bash

#
# CC BY-NC-SA 4.0 Deed 
# keys-menu, a work by clyde
#

# example usage: 
# $ bash keys_menu "rofi -dmenu"
# $ bash keys_menu dmenu

menu=$1
test -z $1 && exit 1

main_menu=$(echo -e "try+open\nclose+open" | $menu -p "careful: this will display your logins! select any to continue" -lines 0) || exit 1

case $main_menu in
    "try+open")
        return;;
    "close+open")
        keys close;;
    *)
        exit 1;;
esac

# this should be done in keys itself, but since it's not open yet, we have to do it ourselves
dbid=$(echo "$KEYS_DIR" | b2sum | cut -b1-16)
mkdir /tmp/keys_"$USER"_$dbid 2> /dev/null
chmod 700 /tmp/keys_"$USER"_$dbid

tmpdir=/tmp/keys_"$USER"_$dbid
database_menu_pw="$tmpdir"/menu_password
database="$tmpdir"/database

if ! test -e "$database"; then
    database_password=$(rofi -dmenu -password -p "enter your database's master key")
    test -z "$database_password" && exit 1

    notify-send "trying to unlock... wait until this is over. if any error, close+open"
    touch "$database_menu_pw"
    chmod 600 "$database_menu_pw"
    echo -n "$database_password" > "$database_menu_pw"
    keys open "$database_menu_pw" || { 
        notify-send "failure unlocking database, the password is wrong?"
        keys close
        exit 1
    }
fi

entry=$(keys list 2>/dev/null | $menu) || exit 1

kn=$(echo "$entry" | sed 's/\..*//')
password=$(keys get $kn)
login=$(keys list -lt | grep -P "\b$kn\." | awk '{print $3}')
totp=$(keys totp $kn)

choice=$(echo -e "password\nlogin+password\nlogin\ntotp" | $menu) || exit 1

{
case $choice in
    "login+password")
        for (( i=0; i<${#login}; i++ )); do
            char="${login:$i:1}"
            xdotool type "$char"
        done
        sleep 0.01
        xdotool key Tab
        sleep 0.01
        for (( i=0; i<${#password}; i++ )); do
            char="${password:$i:1}"
            xdotool type "$char"
        done
        ;;
    "password")
        for (( i=0; i<${#password}; i++ )); do
            char="${password:$i:1}"
            xdotool type "$char"
        done
        ;;
    "login")
        for (( i=0; i<${#login}; i++ )); do
            char="${login:$i:1}"
            xdotool type "$char"
        done
        ;;
    "totp")
        for (( i=0; i<${#totp}; i++ )); do
            char="${totp:$i:1}"
            xdotool type "$char"
        done
        ;;
esac

notify-send "done typing, you may press enter"

} &


